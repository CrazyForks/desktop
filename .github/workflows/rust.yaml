name: Rust

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
  pull_request:
    branches: [main]
    paths:
      - "backend/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-14]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo build
        working-directory: backend
        run: cargo build --locked --release

  unit-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: taiki-e/install-action@v2
        name: Install nextest
        with:
          tool: cargo-nextest

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
             ~/.cargo/git
             target
          key: ${ runner.os }-cargo-debug-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo test
        working-directory: backend
        run: cargo nextest run --lib --bins

  check:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
             ~/.cargo/git
             target
          key: ${ runner.os }-cargo-debug-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo check (all features)
        working-directory: backend
        run: cargo check --all-features --workspace

      - name: Run cargo check (no features)
        working-directory: backend
        run: cargo check --no-default-features --workspace

  clippy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install latest rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.lock') }}

      - name: Run clippy
        working-directory: backend
        run: cargo clippy -- -D warnings

  format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install latest rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt

      - name: Format
        working-directory: backend
        run: cargo fmt -- --check
