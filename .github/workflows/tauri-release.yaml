name: Tauri Workflow Release Process

on:
  workflow_dispatch:
    inputs:
      app-slug:
        type: string
        description: Slug of the application
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CN_APP_SLUG: ${{ github.event.inputs.app-slug }}

jobs:
  draft:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: create draft release
        uses: crabnebula-dev/cloud-release@v0.1.0
        with:
          command: release draft ${{ env.CN_APP_SLUG }} --framework tauri
          api-key: ${{ secrets.CN_API_KEY }}

  build:
    needs: draft

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-14" # for Arm based macs (M1 and above).
            target: "aarch64-apple-darwin"
          - platform: "macos-13" # for Intel based macs.
            target: "x86_64-apple-darwin"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm" # Set this to npm, yarn or pnpm.

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ (matrix.platform == 'macos-14' || matrix.platform == 'macos-13') && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0

      - name: Install x86_64-apple-darwin for mac and build Tauri binaries
        if: matrix.platform == 'macos-14' || matrix.platform == 'macos-13'
        run: |
          pnpm i
          pnpm run tauri build --verbose -- --target ${{ matrix.target }} || ls -la ./backend/target/release
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: build Tauri app for Windows, Linux
        if: matrix.platform != 'macos-13' && matrix.platform != 'macos-14'
        run: |
          pnpm i
          pnpm run tauri build || ls -la ./backend/target/release
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: upload assets
        uses: crabnebula-dev/cloud-release@v0.1.0
        with:
          command: release upload ${{ env.CN_APP_SLUG }} --framework tauri
          api-key: ${{ secrets.CN_API_KEY }}
          path: ./backend

  publish:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: publish release
        uses: crabnebula-dev/cloud-release@v0.1.0
        with:
          command: release publish ${{ env.CN_APP_SLUG }} --framework tauri
          api-key: ${{ secrets.CN_API_KEY }}
